{"version":3,"sources":["config.js","actions/index.js","reducers/cpuReducer.js","reducers/gpuReducer.js","reducers/ramReducer.js","reducers/storageReducer.js","reducers/resultReducer.js","reducers/index.js","contexts/AppContext.js","components/selectComp/SelectCPU.js","components/selectComp/SelectGPU.js","components/selectComp/SelectRAM.js","components/selectComp/SelectStorage.js","components/selectComp/SelectSection.js","model/index.js","components/ResultSection.js","App.js","reportWebVitals.js","index.js"],"names":["Config","url","components","CREATE_CPU_MODEL","CREATE_GPU_MODEL","CREATE_RAM_MODEL","CREATE_STORAGE_CAPACITY","CREATE_STORAGE_BRAND","CREATE_STORAGE_MODEL","CREATE_RESULT","DELETE_RESULT","cpuArr","state","action","type","filteredArr","filter","option","selectedBrand","gpuArr","ramArr","filteredByNum","split","pop","shift","selectedNum","filteredByBrand","storageArr","capacity","capaArr","brand","model","brandArr","temp","filteredByCapacity","modelArr","includes","selectedCapacity","resultObj","computer","combineReducers","AppContext","createContext","AppContextProvider","props","useReducer","reducer","dispatch","useState","setCpuArr","setGpuArr","setRamArr","hddArr","setHDDArr","ssdArr","setSSDArr","useEffect","component","fetch","then","response","json","data","Provider","value","children","SelectCPU","useContext","brandOptions","setBrandOptions","result","forEach","push","className","onChange","e","preventDefault","document","querySelector","id","defaultValue","map","index","toString","numOptions","setNumOptions","numArr","number","sort","createModel","hddBrandOptions","setHDDBrandOptions","hddCapaOptions","setHDDCapaOptions","ssdBrandOptions","setSSDBrandOptions","ssdCapaOptions","setSSDCapaOptions","match","sortByCapacity","arr","teraByteArr","gigaByteArr","i","length","str","substring","parseInt","a","b","addUnit","concat","unit","selectedType","SelectSection","Computer","cpu","gpu","ram","storage","this","score","storageScore","Type","Math","floor","ResultSection","isValidInput","setValidInput","isAllSelected","stepNodeList","querySelectorAll","onClick","computerCount","alert","scope","Brand","Model","getScoreForGaming","getScoreForWorking","window","confirm","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2a513962.chunk.js","sourcesContent":["export const Config = {\n  url: \"https://api.recursionist.io/builder/computers?type=\",\n  components: [\"cpu\", \"gpu\", \"ram\", \"hdd\", \"ssd\"],\n}","export const CREATE_CPU_MODEL = \"CREATE_CPU_MODEL\"\nexport const CREATE_GPU_MODEL = \"CREATE_GPU_MODEL\"\nexport const CREATE_RAM_MODEL = \"CREATE_RAM_MODEL\"\nexport const CREATE_STORAGE_CAPACITY = \"CREATE_STORAGE_CAPACITY\"\nexport const CREATE_STORAGE_BRAND = \"CREATE_STORAGE_BRAND\"\nexport const CREATE_STORAGE_MODEL = \"CREATE_STORAGE_MODEL\"\nexport const CREATE_RESULT = \"CREATE_RESULT\"\nexport const DELETE_RESULT = \"DELETE_RESULT\"","import { CREATE_CPU_MODEL } from \"../actions\";\n\nconst cpuArr = (state = [], action) => {\n  switch(action.type){\n    case CREATE_CPU_MODEL:\n      const filteredArr = action.cpuArr.filter(option => option[\"Brand\"] === action.selectedBrand)\n      return filteredArr\n    default:\n      return state;\n  }\n}\n\nexport default cpuArr;","import { CREATE_GPU_MODEL } from \"../actions\"\n\nconst gpuArr = (state = [], action) => {\n  switch(action.type){\n    case CREATE_GPU_MODEL:\n      const filteredArr = action.gpuArr.filter(option => option[\"Brand\"] === action.selectedBrand)\n      return filteredArr\n    default:\n      return state\n  }\n}\n\nexport default gpuArr;","import { CREATE_RAM_MODEL } from \"../actions\"\n\nconst ramArr = (state = [], action) => {\n  switch(action.type){\n    case CREATE_RAM_MODEL:\n      const filteredByNum = action.ramArr.filter(option => option[\"Model\"].split(\" \").pop().split(\"x\").shift() === action.selectedNum)\n      const filteredByBrand = filteredByNum.filter(option => option[\"Brand\"] === action.selectedBrand)\n      return filteredByBrand\n    default:\n      return state\n  }\n}\n\nexport default ramArr;","import { CREATE_STORAGE_CAPACITY, CREATE_STORAGE_BRAND, CREATE_STORAGE_MODEL } from \"../actions\"\n\nconst storageArr = (state = {}, action) => {\n  switch(action.type){\n    case CREATE_STORAGE_CAPACITY:\n      return { capacity: action.capaArr, brand: [], model: [] }\n    case CREATE_STORAGE_BRAND:\n      return { capacity: action.capaArr, brand: action.brandArr, model: [] }\n    case CREATE_STORAGE_MODEL:\n      const temp = { capacity: action.capaArr, brand: action.brandArr, model: [] }\n      const filteredByCapacity = action.modelArr.filter(option => option[\"Model\"].includes(action.selectedCapacity))\n      const filteredByBrand = filteredByCapacity.filter(option => option[\"Brand\"] === action.selectedBrand)\n      temp[\"model\"] = filteredByBrand\n      return temp\n    default:\n      return state\n  }\n}\n\nexport default storageArr;","import { CREATE_RESULT, DELETE_RESULT } from \"../actions\"\n\nconst resultObj = (state = {}, action) => {\n  switch(action.type){\n    case CREATE_RESULT:\n      // console.log(action.computer)\n      return action.computer\n    case DELETE_RESULT:\n      return []\n    default:\n      return state\n  }\n}\n\nexport default resultObj;","import { combineReducers } from \"redux\";\n\nimport cpuArr from './cpuReducer'\nimport gpuArr from './gpuReducer'\nimport ramArr from './ramReducer'\nimport storageArr from './storageReducer'\nimport resultObj from './resultReducer'\n\nexport default combineReducers({cpuArr, gpuArr, ramArr, storageArr, resultObj})","import React, { createContext, useState, useEffect, useReducer } from 'react';\n\nimport reducer from \"../reducers\";\nimport { Config } from '../config';\n\nexport const AppContext = createContext();\n\nconst AppContextProvider = (props) => {\n  const initialState = { cpuArr: [], gpuArr: [], ramArr: [], storageArr: { capacity: [], brand: [], model: [] }, resultObj: {}}\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const [cpuArr, setCpuArr] = useState([]);\n  const [gpuArr, setGpuArr] = useState([]);\n  const [ramArr, setRamArr] = useState([]);\n  const [hddArr, setHDDArr] = useState([]);\n  const [ssdArr, setSSDArr] = useState([]);\n\n  useEffect(() => {\n    for(let component of Config.components){\n      fetch(Config.url + component).then(response=>response.json()).then(data=>{\n        if(component === \"cpu\") setCpuArr(data);\n        else if(component === \"gpu\") setGpuArr(data);\n        else if(component === \"ram\") setRamArr(data);\n        else if(component === \"hdd\") setHDDArr(data);\n        else if(component === \"ssd\") setSSDArr(data);\n      })\n    }\n  }, [])\n\n  // {props.children} is for receiving Consumer Components\n  // Add states and functions to value-{...}\n  return(\n    <AppContext.Provider value={{cpuArr, setCpuArr, gpuArr, setGpuArr, ramArr, setRamArr, hddArr, setHDDArr, ssdArr, setSSDArr, state, dispatch}}>\n      {props.children}\n    </AppContext.Provider>\n  )\n}\nexport default AppContextProvider;","import React, { useState, useEffect, useContext } from 'react'\n\nimport { Config } from '../../config'\nimport { AppContext } from '../../contexts/AppContext'\nimport { CREATE_CPU_MODEL } from '../../actions'\n\nexport default function SelectCPU() {\n  const { cpuArr, state, dispatch } = useContext(AppContext)\n  const [ brandOptions, setBrandOptions ] = useState([])\n\n  useEffect(() => {\n    fetch(Config.url + \"cpu\").then(response => response.json()).then(data => {\n      let result = []\n      data.forEach(option => {\n        if(!result.includes(option[\"Brand\"])) result.push(option[\"Brand\"])\n      })\n      setBrandOptions(result)\n    })\n  }, []) \n\n  const createModel = e => {\n    e.preventDefault();\n    const selectedBrand = document.querySelector('#cpuBrand').value\n    dispatch({type: CREATE_CPU_MODEL, cpuArr, selectedBrand})\n  }\n\n  return (\n    <div className=\"p-2\">\n      <h4 className=\"subtitle\">step1 : Select your CPU</h4>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">Brand</span>\n          <select onChange={createModel} id=\"cpuBrand\" className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            {brandOptions.map((option, index) => {\n              return(\n                <option value={option} key={index.toString()}>{option}</option>\n              )\n            })}\n          </select>\n        </label>\n      </div>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">Model</span>\n          <select id=\"cpuModel\" className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            {state[\"cpuArr\"].map((option, index) => {\n              return(\n                <option value={option} key={index.toString()}>{option[\"Model\"]}</option>\n              )\n            })}\n          </select>\n        </label>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react'\n\nimport { Config } from '../../config'\nimport { AppContext } from '../../contexts/AppContext'\nimport { CREATE_GPU_MODEL } from '../../actions'\n\nexport default function SelectCPU() {\n  const { gpuArr, state, dispatch } = useContext(AppContext)\n  const [ brandOptions, setBrandOptions ] = useState([])\n\n  useEffect(() => {\n    fetch(Config.url + \"gpu\").then(response => response.json()).then(data => {\n      let result = []\n      data.forEach(option => {\n        if(!result.includes(option[\"Brand\"])) result.push(option[\"Brand\"])\n      })\n      setBrandOptions(result)\n    })\n  }, [])\n\n  const createModel = e => {\n    e.preventDefault();\n    const selectedBrand = document.querySelector('#gpuBrand').value\n    dispatch({type: CREATE_GPU_MODEL, gpuArr, selectedBrand})\n  }\n\n  return (\n    <div className=\"p-2\">\n      <h4 className=\"subtitle\">step2 : Select your GPU</h4>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">Brand</span>\n          <select onChange={createModel} id=\"gpuBrand\" className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            {brandOptions.map((option, index) => {\n              return(\n                <option value={option} key={index.toString()}>{option}</option>\n              )\n            })}\n          </select>\n        </label>\n      </div>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">Model</span>\n          <select className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            {state[\"gpuArr\"].map((option, index) => {\n              return(\n                <option value={option[\"Model\"]} key={index.toString()}>{option[\"Model\"]}</option>\n              )\n            })}\n          </select>\n        </label>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react'\n\nimport { Config } from '../../config'\nimport { AppContext } from '../../contexts/AppContext'\nimport { CREATE_RAM_MODEL } from '../../actions'\n\nexport default function SelectCPU() {\n  const { ramArr, state, dispatch } = useContext(AppContext)\n  const [ brandOptions, setBrandOptions ] = useState([])\n  const [ numOptions, setNumOptions ] = useState([])\n\n  useEffect(() => {\n    fetch(Config.url + \"ram\").then(response => response.json()).then(data => {\n      let brandArr = []\n      let numArr = []\n      data.forEach(option => {\n        if(!brandArr.includes(option[\"Brand\"])) brandArr.push(option[\"Brand\"])\n        // Modelの文字列にメモリサイズを表す数字が記載されているため \n        // Ripjaws 4 DDR4 2400 C14 8x16GB -> Get 8\n        const number = option[\"Model\"].split(\" \").pop().split(\"x\").shift();\n        if(!numArr.includes(number)) numArr.push(number)\n      })\n      setBrandOptions(brandArr)\n      setNumOptions(numArr.sort())\n    })\n  }, [])\n\n  const createModel = e => {\n    e.preventDefault();\n    const selectedNum = document.querySelector('#stickNum').value\n    const selectedBrand = document.querySelector('#ramBrand').value\n    dispatch({type: CREATE_RAM_MODEL, ramArr, selectedNum, selectedBrand})\n  }\n\n  return (\n    <div className=\"p-2\">\n      <h4 className=\"subtitle\">step3 : Select your Memory Card</h4>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">How Many</span>\n          <select onChange={createModel} id=\"stickNum\" className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            {numOptions.map((option, index) => {\n              return(\n                <option value={option} key={index.toString()}>{option}</option>\n              )\n            })}\n          </select>\n        </label>\n      </div>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">Brand</span>\n          <select onChange={createModel} id=\"ramBrand\" className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            {brandOptions.map((option, index) => {\n              return(\n                <option value={option} key={index.toString()}>{option}</option>\n              )\n            })}\n          </select>\n        </label>\n      </div>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">Model</span>\n          <select className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            {state[\"ramArr\"].map((option, index) => {\n              return(\n                <option value={option[\"Model\"]} key={index.toString()}>{option[\"Model\"]}</option>\n              )\n            })}\n          </select>\n        </label>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react'\n\nimport { Config } from '../../config'\nimport { AppContext } from '../../contexts/AppContext'\nimport { CREATE_STORAGE_CAPACITY, CREATE_STORAGE_BRAND, CREATE_STORAGE_MODEL } from '../../actions'\n\nexport default function SelectCPU() {\n  const { hddArr, ssdArr, state, dispatch } = useContext(AppContext)\n  const [ hddBrandOptions, setHDDBrandOptions ] = useState([])\n  const [ hddCapaOptions, setHDDCapaOptions ] = useState([])\n  const [ ssdBrandOptions, setSSDBrandOptions ] = useState([])\n  const [ ssdCapaOptions, setSSDCapaOptions ] = useState([])\n\n  useEffect(() => {\n    fetch(Config.url + \"hdd\").then(response => response.json()).then(data => {\n      let brandArr = []\n      let capaArr = []\n      data.forEach(option => {\n        if(!brandArr.includes(option[\"Brand\"])) brandArr.push(option[\"Brand\"])\n        // Modelの文字列にストレージを表す数字が記載されているため\n        // Gold 12TB (2017) -> Get 12TB\n        let regexp = /[0-9]{1,3}[TG]B/g;\n        let capacity = option[\"Model\"].match(regexp).toString()\n        if(!capaArr.includes(capacity)) capaArr.push(capacity)\n        capaArr = sortByCapacity(capaArr)\n      })\n      setHDDBrandOptions(brandArr)\n      setHDDCapaOptions(capaArr)\n    })\n  }, [])\n\n  useEffect(() => {\n    fetch(Config.url + \"ssd\").then(response => response.json()).then(data => {\n      let brandArr = []\n      let capaArr = []\n      data.forEach(option => {\n        if(!brandArr.includes(option[\"Brand\"])) brandArr.push(option[\"Brand\"])\n        let regexp = /[0-9]{1,3}[TG]B/g;\n        let capacity = option[\"Model\"].match(regexp).toString()\n        if(!capaArr.includes(capacity)) capaArr.push(capacity)\n        capaArr = sortByCapacity(capaArr)\n      })\n      setSSDBrandOptions(brandArr)\n      setSSDCapaOptions(capaArr)\n    })\n  }, [])\n\n  const sortByCapacity = (arr) => {\n    let teraByteArr = [];\n    let gigaByteArr = [];\n\n    for(let i = 0; i < arr.length; i++){\n      let str = arr[i].substring(arr[i].length-2);\n      if(str === \"TB\") teraByteArr.push(parseInt(arr[i].substring(0, arr[i].length-2)));\n      else if(str === \"GB\") gigaByteArr.push(parseInt(arr[i].substring(0, arr[i].length-2)));\n    }\n\n    teraByteArr.sort((a,b) => b-a);\n    gigaByteArr.sort((a,b) => b-a);\n\n    teraByteArr = addUnit(teraByteArr, \"TB\");\n    gigaByteArr = addUnit(gigaByteArr, \"GB\");\n\n    teraByteArr = teraByteArr.concat(gigaByteArr);\n    return teraByteArr;\n  }\n\n  const addUnit = (arr, unit) => {\n    let result = []\n    for(let i = 0; i < arr.length; i++){\n      result.push(arr[i] + unit)\n    }\n    return result;\n  }\n\n  const createCapacity = e => {\n    e.preventDefault();\n    const selectedType = document.querySelector('#storageType').value\n    let capaArr = []\n    selectedType === \"HDD\" ? capaArr = hddCapaOptions : capaArr = ssdCapaOptions\n    dispatch({type: CREATE_STORAGE_CAPACITY, capaArr})\n  }\n\n  const createBrand = e => {\n    e.preventDefault();\n    const selectedType = document.querySelector('#storageType').value\n    let capaArr = []\n    let brandArr = []\n    if(selectedType === \"HDD\"){\n      capaArr = hddCapaOptions\n      brandArr = hddBrandOptions\n    }\n    else{\n      capaArr = ssdCapaOptions\n      brandArr = ssdBrandOptions\n    }\n    dispatch({type: CREATE_STORAGE_BRAND, capaArr, brandArr})\n  }\n\n  const createModel = e => {\n    e.preventDefault();\n    const selectedType = document.querySelector('#storageType').value\n    let capaArr = []\n    let brandArr = []\n    let modelArr = []\n    if(selectedType === \"HDD\"){\n      capaArr = hddCapaOptions\n      brandArr = hddBrandOptions\n      modelArr = hddArr\n    }\n    else{\n      capaArr = ssdCapaOptions\n      brandArr = hddBrandOptions\n      modelArr = ssdArr\n    }\n    const selectedCapacity = document.querySelector('#storageCapacity').value\n    const selectedBrand = document.querySelector('#storageBrand').value\n    dispatch({type: CREATE_STORAGE_MODEL, capaArr, brandArr, modelArr, selectedCapacity, selectedBrand})\n  }\n\n  return (\n    <div className=\"p-2\">\n      <h4 className=\"subtitle\">step4 : Select your Storage</h4>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">HDD or SSD</span>\n          <select onChange={createCapacity} id=\"storageType\" className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            <option value=\"HDD\">HDD</option>\n            <option value=\"SSD\">SSD</option>\n          </select>\n        </label>\n      </div>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">Storage</span>\n          <select onChange={createBrand} id=\"storageCapacity\" className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            {state[\"storageArr\"][\"capacity\"].map((option, index) => {\n              return(\n                <option value={option} key={index.toString()}>{option}</option>\n              )\n            })}\n          </select>\n        </label>\n      </div>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">Brand</span>\n          <select onChange={createModel} id=\"storageBrand\" className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            {state[\"storageArr\"][\"brand\"].map((option, index) => {\n              return(\n                <option value={option} key={index.toString()}>{option}</option>\n              )\n            })}\n          </select>\n        </label>\n      </div>\n      <div>\n        <label className=\"block text-left my-2\">\n          <span className=\"font-bold px-3\">Model</span>\n          <select className=\"custom-select w-full border bg-white rounded px-5 py-2 outline-none\">\n            <option defaultValue>----</option>\n            {state[\"storageArr\"][\"model\"].map((option, index) => {\n              return(\n                <option value={option[\"Model\"]} key={index.toString()}>{option[\"Model\"]}</option>\n              )\n            })}\n          </select>\n        </label>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport SelectCPU from './SelectCPU'\nimport SelectGPU from './SelectGPU'\nimport SelectRAM from './SelectRAM'\nimport SelectStorage from './SelectStorage'\n\nexport default function SelectSection() {\n  return (\n    <div className=\"container p-2\">\n      <SelectCPU />\n      <SelectGPU />\n      <SelectRAM />\n      <SelectStorage />\n    </div>\n  )\n}\n","export class Computer{\n  constructor(cpu, gpu, ram, storage)\n  {\n    this.cpu = cpu;\n    this.gpu = gpu;\n    this.ram = ram;\n    this.storage = storage;\n  }\n\n  getScoreForGaming()\n  {\n    let score = 0;\n    let storageScore = (this.storage.Type === \"SSD\") ? .1 : .025;\n    score += this.cpu[\"Benchmark\"] * .25;\n    score += this.gpu[\"Benchmark\"] * .6;\n    score += this.ram[\"Benchmark\"] * .125;\n    score += this.storage[\"Benchmark\"] * storageScore;\n    return Math.floor(score);\n  }\n\n  getScoreForWorking()\n  {\n    let score = 0;\n    score += this.cpu[\"Benchmark\"] * .6;\n    score += this.gpu[\"Benchmark\"] * .25;\n    score += this.ram[\"Benchmark\"] * .1;\n    score += this.storage[\"Benchmark\"] * .05;\n    return Math.floor(score);\n  }\n}","import React, { useState, useContext } from 'react'\n\nimport { AppContext } from '../contexts/AppContext'\nimport { Config } from '../config'\nimport { Computer } from '../model'\nimport { CREATE_RESULT, DELETE_RESULT } from '../actions'\n\nexport default function ResultSection() {\n  const { state, dispatch } = useContext(AppContext)\n  const [ isValidInput, setValidInput ] = useState(false)\n\n  const addResult = e => {\n    e.preventDefault();\n    if(isAllSelected()){\n      Config.computerCount++\n      const cpu = state[\"cpuArr\"][0]\n      const gpu = state[\"gpuArr\"][0]\n      const ram = state[\"ramArr\"][0]\n      const storage = state[\"storageArr\"].model[0]\n      setValidInput(true)\n      // console.log(cpu, gpu, ram, storage)\n      const computer = new Computer(cpu, gpu, ram, storage)\n      dispatch({type: CREATE_RESULT, computer})\n    }\n    else{\n      alert(\"Please fill in all fields!\")\n    }\n  }\n\n  const deleteResult = e => {\n    e.preventDefault();\n    setValidInput(false)\n    const confirm = window.confirm(\"Are you sure you want to delete it?\")\n    if(confirm) dispatch({type: DELETE_RESULT})\n  }\n\n  const isAllSelected = () => {\n    const stepNodeList = document.querySelectorAll(\".custom-select\")\n    for(let node of stepNodeList){\n      if(node.value === \"----\") return false\n    }\n    return true\n  }\n\n  return (\n    <div>\n      <div className=\"flex justify-center my-3\">\n        <button onClick={addResult} className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n          Get result\n        </button>\n      </div>\n      {isValidInput && \n        <div className=\"container p-5 my-5\">\n          <div className=\"flex flex-col\">\n            <div className=\"-my-2 overflow-x-auto\">\n              <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr className=\"bg-blue-300\">\n                        <th scope=\"col\" className=\"w-2/5 px-6 py-3 text-left text-xs font-medium font-bold uppercase tracking-wider\">\n                          Components\n                        </th>\n                        <th scope=\"col\" className=\"w-1/6 py-3 text-left text-xs font-medium font-bold uppercase tracking-wider\">\n                          Brand\n                        </th>\n                        <th scope=\"col\" className=\"w-3/5 py-3 text-center text-xs font-medium font-bold uppercase tracking-wider\">\n                          Model\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      <tr>\n                        <td className=\"px-3 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <div className=\"ml-4\">\n                              <div className=\"text-sm font-medium text-gray-900\">\n                                CPU\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900\">{state[\"resultObj\"].cpu.Brand}</div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-center\">\n                          <span>\n                            {state[\"resultObj\"].cpu.Model}\n                          </span>\n                        </td>\n                      </tr>\n                      <tr className=\"bg-blue-100\">\n                        <td className=\"px-3 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <div className=\"ml-4\">\n                              <div className=\"text-sm font-medium text-gray-900\">\n                                GPU\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900\">{state[\"resultObj\"].gpu.Brand}</div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-center\">\n                          <span>\n                            {state[\"resultObj\"].gpu.Model}\n                          </span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"px-3 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <div className=\"ml-4\">\n                              <div className=\"text-sm font-medium text-gray-900\">\n                                Memory Card\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900\">{state[\"resultObj\"].ram.Brand}</div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-center\">\n                          <span>\n                            {state[\"resultObj\"].ram.Model}\n                          </span>\n                        </td>\n                      </tr>\n                      <tr className=\"bg-blue-100\">\n                        <td className=\"px-3 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <div className=\"ml-4\">\n                              <div className=\"text-sm font-medium text-gray-900\">\n                                Storage\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900\">{state[\"resultObj\"].storage.Brand}</div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-center\">\n                          <span>\n                            {state[\"resultObj\"].storage.Model}\n                          </span>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex justify-around p-3\">\n            <h2 className=\"p-4 inline-flex text-xl leading-5 font-semibold rounded-full shadow bg-blue-100 text-blue-800\">Gaming: {state[\"resultObj\"].getScoreForGaming()}%</h2>\n            <h2 className=\"p-4 inline-flex text-xl leading-5 font-semibold rounded-full shadow bg-blue-100 text-blue-800\">Working: {state[\"resultObj\"].getScoreForWorking()}%</h2>\n          </div>\n          <div className=\"flex justify-center mt-3\">\n            <button onClick={deleteResult} className=\"bg-red-500 hover:bg-red-400 text-white font-bold py-2 px-4 border-b-4 border-red-700 hover:border-red-500 rounded\">\n              Delete\n            </button>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport './App.css';\n\nimport SelectSection from './components/selectComp/SelectSection';\nimport ResultSection from './components/ResultSection';\nimport AppContextProvider from './contexts/AppContext';\n\nconst App = () => {\n  return (\n    <div className=\"bg-gray-200\">\n      <header className=\"bg-blue-300 shadow-md\">\n        <h1 className=\"text-center text-3xl p-3 font-bold\">Build Your Own PC</h1>\n      </header>\n      <AppContextProvider> \n        <div className=\"container mx-auto p-3\">\n          <SelectSection />\n          <ResultSection />\n        </div>\n      </AppContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}